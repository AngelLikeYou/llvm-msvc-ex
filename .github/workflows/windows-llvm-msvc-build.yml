name: windows-llvm-msvc-build

on: [push, pull_request]

jobs:
  build:
    # Skip building pull requests from the same repository
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    env:
      BUILD_TYPE: Release
    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
          path: llvm-msvc
          submodules: 'recursive'
          
    - name: Build llvm
      run: |
        cmake -Bbuild `
        -DLLVM_INCLUDE_TESTS=OFF `
        -DLLVM_INCLUDE_EXAMPLES=OFF `
        -DLLDB_ENABLE_PYTHON=OFF `
        -DLLVM_ENABLE_LIBXML2=OFF `
        -DLLVM_ENABLE_ZLIB=OFF `
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
        -DLLVM_USE_CRT_RELEASE=MT `
        -DCMAKE_INSTALL_PREFIX=install `
        -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64;RISCV" `
        -DLLVM_ENABLE_PROJECTS="clang;lld;lldb" `
        llvm-msvc\\llvm
        cmake --build build --config ${{ env.BUILD_TYPE }}
        cmake --build build --target install

    - name: Package llvm
      run: 
          7z a windows-llvm-msvc.zip install
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-llvm-msvc
        path: install/*
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') || contains(github.ref, '-pre') }}
        files: windows-llvm-msvc.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
