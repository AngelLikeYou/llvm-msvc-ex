name: linux-llvm-msvc-build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    env:
      BUILD_TYPE: Release
    steps:

    - name: Setup build deps
      run: |
          sudo wget -qO /usr/local/bin/ninja.gz https://github.com/ninja-build/ninja/releases/latest/download/ninja-linux.zip \
          && sudo gunzip /usr/local/bin/ninja.gz \
          && sudo chmod a+x /usr/local/bin/ninja \
          && sudo apt-get install build-essential make cmake \
          && sudo apt-get install p7zip-full p7zip-rar
          
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
          path: llvm-msvc
          submodules: 'recursive'
          
    - name: Build llvm
      run: |
        cmake -G "Ninja" -Bbuild \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DLLVM_INCLUDE_EXAMPLES=OFF \
        -DLLDB_ENABLE_PYTHON=OFF \
        -DLLVM_ENABLE_LIBXML2=OFF \
        -DLLVM_ENABLE_ZLIB=OFF \
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
        -DCPACK_GENERATOR=ZIP \
        -DCMAKE_INSTALL_PREFIX="$pwd/prefix" \
        -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
        -DLLVM_ENABLE_PROJECTS="clang;lld;lldb" \
        llvm-msvc/llvm
        cmake --build build --config ${{ env.BUILD_TYPE }}

    - name: Package llvm
      run: |
        cmake --build build --target package --config ${{ env.BUILD_TYPE }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: llvm-msvc
        path: build/*.zip
    
    - name: Get lowercase OS name
      id: osname
      uses: ASzc/change-string-case-action@v1
      with:
        string: ${{ runner.os }}
        
    - name: Archive
      run:
        7z a ${{ github.event.repository.name }}-${{ steps.osname.outputs.lowercase }}.zip build/*.zip
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') || contains(github.ref, '-pre') }}
        files: ${{ github.event.repository.name }}-${{ steps.osname.outputs.lowercase }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
